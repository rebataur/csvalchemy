sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
wget -qO- https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo tee /etc/apt/trusted.gpg.d/pgdg.asc &>/dev/null

#sudo apt-get install wget ca-certificates

#wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -

#sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'

sudo apt-get update



sudo apt-get install -y postgresql-client-16 postgresql-common postgresql-16 postgresql-contrib  postgresql-server-dev-16  postgresql-plpython3-16




# Listen on all ip addresses
sudo bash -c 'echo "host    all             all             0.0.0.0/0            trust" >> /etc/postgresql/16/main/pg_hba.conf'
sudo bash -c 'echo "listen_addresses = '\''*'\''" >> /etc/postgresql/16/main/postgresql.conf'
sudo systemctl restart postgresql


# MAdlib deps DOESN"T WORK

sudo apt-get install -y gcc g++ m4 patch cmake pgxn
mkdir build 
cd build 
cmake .. 
make -j8 # if this causes issues, switch back to a plan `make`
sudo make install 

./madpack -s madlib â€“p postgres install
./madpack -s madlib -p postgres -c postgres/postgres@localhost:5432/postgres install


# Rlang
sudo apt-get install -y libmagick++-dev libcurl4-openssl-dev r-base postgresql-15-plr   

sudo R -e 'install.packages(c("magick","ggplot2","gganimate"))'

sudo R -e 'install.packages(c("gapminder"))'

sudo apt-get -y install postgresql-plpython3-15 python-is-python3  python3-pip




docker stop pgplr
docker rm pgplr

docker run --name "pgplr" -p 5433:5433 -d -t -e ALLOW_IP_RANGE="0.0.0.0/0" -e IP_LIST="*" -e POSTGRES_DBNAME=postgres -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres  corylabiosphere/postgis-plr 
psql -h localhost -U postgres -p 5433 -l


multipass launch --name vm --cpus 4 --disk 20G --memory 8G --network name=Wi-Fi

# PL/JAVA

sudo apt-get update && sudo apt-get install -y openjdk-17-jdk libkrb5-dev
sudo update-alternative --config java

wget https://github.com/tada/pljava/archive/refs/tags/V1_6_5.tar.gz
tar -xf V1_6_5.tar.gz
cd pljava-1_6_5
mvn clean install
java -jar pljava-packaging/target/pljava-pg15.jar

psql
SET pljava.libjvm_location TO '/usr/lib/jvm/java-1.17.0-openjdk-amd64/lib/server/libjvm.so';
ALTER SYSTEM SET pljava.libjvm_location TO '/usr/lib/jvm/java-1.17.0-openjdk-amd64/lib/server/libjvm.so';
create extension pljava;






https://gist.github.com/joelonsql/e5aa27f8cc9bd22b8999b7de8aee9d47#procedural-languages